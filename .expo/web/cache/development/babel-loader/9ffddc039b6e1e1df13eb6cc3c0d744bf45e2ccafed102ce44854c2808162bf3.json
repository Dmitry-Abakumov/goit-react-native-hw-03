{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { useEffect, useState } from \"react\";\nimport BgImgWrapper from \"../../../shared/components/BgImgWrapper\";\nimport FormWrapper from \"../../../shared/components/FormWrapper\";\nimport FormBtn from \"../../../shared/components/FormBtn\";\nimport TextField from \"../../../shared/components/TextFIeld\";\nimport useKeyboard from \"../../../shared/hooks/useKeyboard\";\nimport useForm from \"../../../shared/hooks/useForm\";\nimport formProps from \"./formProps\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialState = {\n  email: \"\",\n  password: \"\"\n};\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation,\n    setIsAuth = _ref.setIsAuth;\n  var _useForm = useForm(initialState, setIsAuth),\n    fields = _useForm.fields,\n    setFields = _useForm.setFields,\n    onSubmit = _useForm.onSubmit;\n  var _useKeyboard = useKeyboard(),\n    isKeyboardShow = _useKeyboard.isKeyboardShow;\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(BgImgWrapper, {}), _jsxs(FormWrapper, {\n        isKeyboardShow: isKeyboardShow,\n        pb: 144,\n        pt: 32,\n        children: [_jsx(Text, {\n          style: styles.formTitle,\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }), _jsx(TextField, _objectSpread({\n          onChangeText: function onChangeText(text) {\n            return setFields(function (prevFields) {\n              return _objectSpread(_objectSpread({}, prevFields), {}, {\n                email: text\n              });\n            });\n          },\n          value: fields.email\n        }, formProps.email)), _jsx(View, {\n          style: styles.passwordWrapper,\n          children: _jsx(TextField, _objectSpread({\n            onChangeText: function onChangeText(text) {\n              return setFields(function (prevFields) {\n                return _objectSpread(_objectSpread({}, prevFields), {}, {\n                  password: text\n                });\n              });\n            },\n            value: fields.password\n          }, formProps.password))\n        }), !isKeyboardShow && _jsx(FormBtn, {\n          onSubmit: onSubmit,\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }), !isKeyboardShow && _jsx(TouchableOpacity, {\n          style: styles.loginRedirectLink,\n          activeOpacity: 0.7,\n          onPress: function onPress() {\n            return navigation.navigate(\"Registration\");\n          },\n          children: _jsx(Text, {\n            style: styles.loginRedirectText,\n            children: \"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0443\\u0430\\u0443\\u043D\\u0442\\u0430? \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n          })\n        })]\n      })]\n    })\n  });\n};\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  formTitle: {\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    fontSize: 30,\n    color: \"#212121\",\n    marginBottom: 16,\n    fontFamily: \"Roboto-Medium\"\n  },\n  passwordWrapper: {\n    position: \"relative\"\n  },\n  passwordBtn: {\n    position: \"absolute\",\n    right: 16,\n    bottom: 16\n  },\n  passwordBtnText: {\n    color: \"#1B4371\",\n    fontFamily: \"Roboto-Regular\"\n  },\n  loginRedirectLink: {\n    marginTop: 16\n  },\n  loginRedirectText: {\n    color: \"#1B4371\"\n  }\n});","map":{"version":3,"names":["useEffect","useState","BgImgWrapper","FormWrapper","FormBtn","TextField","useKeyboard","useForm","formProps","jsx","_jsx","jsxs","_jsxs","initialState","email","password","LoginScreen","_ref","navigation","setIsAuth","_useForm","fields","setFields","onSubmit","_useKeyboard","isKeyboardShow","TouchableWithoutFeedback","onPress","Keyboard","dismiss","children","View","style","flex","pb","pt","Text","styles","formTitle","_objectSpread","onChangeText","text","prevFields","value","passwordWrapper","TouchableOpacity","loginRedirectLink","activeOpacity","navigate","loginRedirectText","StyleSheet","create","textAlign","fontWeight","fontSize","color","marginBottom","fontFamily","position","passwordBtn","right","bottom","passwordBtnText","marginTop"],"sources":["D:/Курсы/Репозитории/goit-react-native-hw-03/Screens/auth/LoginScreen/LoginScreen.jsx"],"sourcesContent":["import {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport BgImgWrapper from \"../../../shared/components/BgImgWrapper\";\r\nimport FormWrapper from \"../../../shared/components/FormWrapper\";\r\nimport FormBtn from \"../../../shared/components/FormBtn\";\r\nimport TextField from \"../../../shared/components/TextFIeld\";\r\n\r\nimport useKeyboard from \"../../../shared/hooks/useKeyboard\";\r\nimport useForm from \"../../../shared/hooks/useForm\";\r\nimport formProps from \"./formProps\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst LoginScreen = ({ navigation, setIsAuth }) => {\r\n  const { fields, setFields, onSubmit } = useForm(initialState, setIsAuth);\r\n  const { isKeyboardShow } = useKeyboard();\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n      <View style={{ flex: 1 }}>\r\n        <BgImgWrapper />\r\n        <FormWrapper isKeyboardShow={isKeyboardShow} pb={144} pt={32}>\r\n          <Text style={styles.formTitle}>Войти</Text>\r\n          <TextField\r\n            onChangeText={(text) =>\r\n              setFields((prevFields) => ({ ...prevFields, email: text }))\r\n            }\r\n            value={fields.email}\r\n            {...formProps.email}\r\n          />\r\n          <View style={styles.passwordWrapper}>\r\n            <TextField\r\n              onChangeText={(text) =>\r\n                setFields((prevFields) => ({ ...prevFields, password: text }))\r\n              }\r\n              value={fields.password}\r\n              {...formProps.password}\r\n            />\r\n            {/* <TouchableOpacity style={styles.passwordBtn}>\r\n          <Text style={styles.passwordBtnText}>Показать</Text>\r\n        </TouchableOpacity> */}\r\n          </View>\r\n          {!isKeyboardShow && <FormBtn onSubmit={onSubmit}>Войти</FormBtn>}\r\n\r\n          {!isKeyboardShow && (\r\n            <TouchableOpacity\r\n              style={styles.loginRedirectLink}\r\n              activeOpacity={0.7}\r\n              onPress={() => navigation.navigate(\"Registration\")}\r\n            >\r\n              <Text style={styles.loginRedirectText}>\r\n                Нет аккуаунта? зарегистрироваться\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </FormWrapper>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  formTitle: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 30,\r\n    color: \"#212121\",\r\n    marginBottom: 16,\r\n    fontFamily: \"Roboto-Medium\",\r\n  },\r\n\r\n  passwordWrapper: {\r\n    position: \"relative\",\r\n  },\r\n  passwordBtn: {\r\n    position: \"absolute\",\r\n    right: 16,\r\n    bottom: 16,\r\n  },\r\n  passwordBtnText: {\r\n    color: \"#1B4371\",\r\n    fontFamily: \"Roboto-Regular\",\r\n  },\r\n\r\n  loginRedirectLink: {\r\n    marginTop: 16,\r\n  },\r\n  loginRedirectText: {\r\n    color: \"#1B4371\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}