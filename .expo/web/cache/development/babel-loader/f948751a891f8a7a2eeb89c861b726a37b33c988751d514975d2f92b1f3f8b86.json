{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport RegistrationScreen from \"../Screens/auth/RegistrationScreen/RegistrationScreen\";\nimport LoginScreen from \"../Screens/auth/LoginScreen/LoginScreen\";\nimport PostsScreen from \"../Screens/mainScreen/PostsScreen/PostsScreen\";\nimport CreatePostsScreen from \"../Screens/mainScreen/CreatePostsScreen/CreatePostsScreen\";\nimport ProfileScreen from \"../Screens/mainScreen/ProfileScreen/ProfileScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar AuthStack = createStackNavigator();\nvar FinalScreen = function FinalScreen(_ref) {\n  var isAuth = _ref.isAuth,\n    setIsAuth = _ref.setIsAuth;\n  if (isAuth) {\n    return _jsxs(Tab.Navigator, {\n      screenOptions: {\n        tabBarStyle: _objectSpread({}, styles.tabBarStyle)\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Posts\",\n        component: PostsScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(focused, color, size) {\n            return _jsx(SimpleLineIcons, {\n              name: \"grid\",\n              size: 24,\n              color: \"black\"\n            });\n          },\n          tabBarShowLabel: false,\n          headerTitle: function headerTitle() {\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setIsAuth(false);\n              },\n              children: _jsx(MaterialIcons, {\n                name: \"logout\",\n                size: 24,\n                color: \"black\"\n              })\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"CreatePosts\",\n        component: CreatePostsScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(focused, color, size) {\n            return _jsx(Feather, {\n              name: \"plus\",\n              size: 13,\n              color: \"white\"\n            });\n          },\n          tabBarShowLabel: false,\n          tabBarButton: function tabBarButton(props) {\n            return _jsx(TouchableOpacity, _objectSpread(_objectSpread({}, props), {}, {\n              activeOpacity: 0.7,\n              style: styles.iconWrapper\n            }));\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(focused, color, size) {\n            return _jsx(Feather, {\n              name: \"user\",\n              size: 24,\n              color: \"black\"\n            });\n          },\n          tabBarShowLabel: false\n        }\n      })]\n    });\n  }\n  return _jsxs(AuthStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(AuthStack.Screen, {\n      name: \"Login\",\n      children: function children(props) {\n        return _jsx(LoginScreen, _objectSpread(_objectSpread({}, props), {}, {\n          setIsAuth: setIsAuth\n        }));\n      }\n    }), _jsx(AuthStack.Screen, {\n      name: \"Registration\",\n      children: function children(props) {\n        return _jsx(RegistrationScreen, _objectSpread(_objectSpread({}, props), {}, {\n          setIsAuth: setIsAuth\n        }));\n      }\n    })]\n  });\n};\nexport default FinalScreen;\nvar styles = StyleSheet.create({\n  iconWrapper: {\n    width: 70,\n    hight: 40,\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 20\n  },\n  tabBarStyle: {\n    paddingTop: 9,\n    paddingBittom: 34\n  }\n});","map":{"version":3,"names":["createStackNavigator","createBottomTabNavigator","SimpleLineIcons","Feather","MaterialIcons","RegistrationScreen","LoginScreen","PostsScreen","CreatePostsScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","Tab","AuthStack","FinalScreen","_ref","isAuth","setIsAuth","Navigator","screenOptions","tabBarStyle","_objectSpread","styles","children","Screen","name","component","options","tabBarIcon","focused","color","size","tabBarShowLabel","headerTitle","TouchableOpacity","onPress","tabBarButton","props","activeOpacity","style","iconWrapper","headerShown","StyleSheet","create","width","hight","backgroundColor","borderRadius","paddingTop","paddingBittom"],"sources":["D:/Курсы/Репозитории/goit-react-native-hw-03/Screens/FinalScreen.jsx"],"sourcesContent":["import { TouchableOpacity, StyleSheet } from \"react-native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nimport RegistrationScreen from \"../Screens/auth/RegistrationScreen/RegistrationScreen\";\r\nimport LoginScreen from \"../Screens/auth/LoginScreen/LoginScreen\";\r\nimport PostsScreen from \"../Screens/mainScreen/PostsScreen/PostsScreen\";\r\nimport CreatePostsScreen from \"../Screens/mainScreen/CreatePostsScreen/CreatePostsScreen\";\r\nimport ProfileScreen from \"../Screens/mainScreen/ProfileScreen/ProfileScreen\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst AuthStack = createStackNavigator();\r\n\r\nconst FinalScreen = ({ isAuth, setIsAuth }) => {\r\n  if (isAuth) {\r\n    return (\r\n      <Tab.Navigator\r\n        screenOptions={{\r\n          tabBarStyle: { ...styles.tabBarStyle },\r\n        }}\r\n      >\r\n        <Tab.Screen\r\n          name='Posts'\r\n          component={PostsScreen}\r\n          options={{\r\n            tabBarIcon: (focused, color, size) => (\r\n              <SimpleLineIcons name='grid' size={24} color='black' />\r\n            ),\r\n            tabBarShowLabel: false,\r\n            headerTitle: () => (\r\n              <TouchableOpacity onPress={() => setIsAuth(false)}>\r\n                <MaterialIcons name='logout' size={24} color='black' />\r\n              </TouchableOpacity>\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name='CreatePosts'\r\n          component={CreatePostsScreen}\r\n          options={{\r\n            tabBarIcon: (focused, color, size) => (\r\n              <Feather name='plus' size={13} color='white' />\r\n            ),\r\n            tabBarShowLabel: false,\r\n            tabBarButton: (props) => (\r\n              <TouchableOpacity\r\n                {...props}\r\n                activeOpacity={0.7}\r\n                style={styles.iconWrapper}\r\n              />\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name='Profile'\r\n          component={ProfileScreen}\r\n          options={{\r\n            tabBarIcon: (focused, color, size) => (\r\n              <Feather name='user' size={24} color='black' />\r\n            ),\r\n            tabBarShowLabel: false,\r\n          }}\r\n        />\r\n      </Tab.Navigator>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthStack.Navigator screenOptions={{ headerShown: false }}>\r\n      <AuthStack.Screen name={\"Login\"}>\r\n        {(props) => <LoginScreen {...props} setIsAuth={setIsAuth} />}\r\n      </AuthStack.Screen>\r\n      <AuthStack.Screen name={\"Registration\"}>\r\n        {(props) => <RegistrationScreen {...props} setIsAuth={setIsAuth} />}\r\n      </AuthStack.Screen>\r\n    </AuthStack.Navigator>\r\n  );\r\n};\r\n\r\nexport default FinalScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  iconWrapper: {\r\n    width: 70,\r\n    hight: 40,\r\n    backgroundColor: \"#FF6C00\",\r\n    borderRadius: 20,\r\n  },\r\n  tabBarStyle: {\r\n    paddingTop: 9,\r\n    paddingBittom: 34,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}